{"version":3,"file":"index.mjs","sources":["../lib/float16array.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float16Array === 'function' ) ? Float16Array : null; // eslint-disable-line no-undef, stdlib/require-globals\n\n\n// EXPORTS //\n\nexport default main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFloat16Array from '@stdlib/assert-is-float16array';\nimport PINF from '@stdlib/constants-float64-pinf'; // TODO: replace with `constants/float16/pinf`\nimport GlobalFloat16Array from './float16array.js';\n\n\n// MAIN //\n\n/**\n* Tests for native `Float16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float16Array` support\n*\n* @example\n* var bool = hasFloat16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat16Array( [ 1.0, 3.14, -3.14, 5.0e40 ] );\n\t\tbool = (\n\t\t\tisFloat16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] !== 3.14 &&\n\t\t\tarr[ 2 ] !== -3.14 &&\n\t\t\tarr[ 3 ] === PINF\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nexport default hasFloat16ArraySupport;\n"],"names":["main","Float16Array","hasFloat16ArraySupport","bool","arr","GlobalFloat16Array","isFloat16Array","PINF","err"],"mappings":";;oLAsBA,IAAIA,EAAiC,mBAAjBC,aAAgCA,aAAe,KCgBnE,SAASC,IACR,IAAIC,EACAC,EAEJ,GAAmC,mBAAvBC,EACX,OAAO,EAGR,IACCD,EAAM,IAAIC,EAAoB,CAAE,EAAK,MAAO,KAAM,OAClDF,EACCG,EAAgBF,IACH,IAAbA,EAAK,IACQ,OAAbA,EAAK,KACS,OAAdA,EAAK,IACLA,EAAK,KAAQG,CAEd,CAAC,MAAQC,GACTL,GAAO,CACP,CACD,OAAOA,CACR"}